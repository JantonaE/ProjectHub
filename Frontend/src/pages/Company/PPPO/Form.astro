---

import PopUpError from "../../../components/PopUpError.jsx";
import { getUser } from "../../../lib/auth";
import * as lib from "../../../lib/lib"
import { lookForBrothersWithCode ,lookForBrothersAncestorWithCode,getStatesByType } from "../../../lib/lib";
import {formatDate,convertToISOFormat} from "../../../lib/utils.ts";

let parent_id = Astro.url.searchParams.get("parentId");
let update = Astro.url.searchParams.get("update");
let updatePPPO = null;
let pppoType;
let invalid_code;
let formSent = false;
let states;
let radioButton;
let company;
let user = await getUser();
if(user == null){
  console.log("redirect");
  return Astro.redirect('/');
}else{
  company = user.company;
}
if (parent_id == null && update == ""){
    parent_id = "";
    // SOLO PODRAS ELEGIR PORTFOLIO
    pppoType = -1;
    states = await lib.getStatesByType(0);

}else if(update == ""){ // OTRAS OPCIONES A ELEGIR
    const pppo = await lib.getPPPOById(parent_id);
    pppoType = pppo.PPPO;
    states = await lib.getStatesByType(pppoType);
    
}else if(update != ""){ // Update of PPPO
  updatePPPO = await lib.getPPPOById(update);
  states = await lib.getStatesByType(updatePPPO.PPPO);
}





// Get the possible managers
const persons = await lib.getPersonsByCompany(company);


if (Astro.request.method === "POST") {
  try {
    // OBTENER COMPANY DE LA SESION Y padre
    const data = await Astro.request.formData();

    radioButton = Number(data.get("radio1"));
    const code = data.get("code").toString();
    // Look if there is a brother with the same code -> Cant create

    if(parent_id == ""){
      invalid_code = await lookForBrothersAncestorWithCode(company,code);
    }else{
      invalid_code = await lookForBrothersWithCode(parent_id,code);
    }
    

    
      console.log("Valido");
      console.log(invalid_code);
      const title = data.get("title").toString();
      const description = data.get("description").toString();
      console.log(description);
      const strategic_goal = data.get("strategic_goal").toString();
      const planned_value = Number(data.get("planned_value"));
      const actual_cost = Number(data.get("actual_cost"));
      const start_date = formatDate(data.get("start_date"));
      const finish_date = formatDate(data.get("finish_date"));
      const start_real_date = formatDate(data.get("start_real_date"));
      const finish_real_date = formatDate(data.get("finish_real_date"));
      const risk = Number(data.get("risk"));
      const priority = Number(data.get("priority"));
      const internal_manager = data.get("internal_manager").toString();
      const external_manager = data.get("external_manager").toString();
      let state = data.get("state").toString();
      // Cambiar:
      
      
      if(updatePPPO == null){ // Creation
        console.log("Creacion");
        const res = await lib.createPPPO(
          radioButton,
          title,
          description,
          code,
          strategic_goal,
          planned_value,
          actual_cost,
          start_date,
          finish_date,
          start_real_date,
          finish_real_date,
          risk,
          priority,
          internal_manager,
          external_manager,
          company,
          parent_id,
          state
      );
      
        // Internal Manager update pppo
        // External Manager update pppo
        if(external_manager != ""){
          await lib.updatePersonExternalManager(res.idPPPO,external_manager);
        }
        await lib.updatePersonInternalManager(res.idPPPO,internal_manager);
        

      
        formSent = true;
        if (parent_id == ""){
          return Astro.redirect("/Company/PPPOs");
        }else{
          return Astro.redirect(`/Company/PPPO/Sons?parentId=${parent_id}`);
        }
        
      }else{ //Update
        console.log("Update");
        const updatedData = {
        idPPPO: updatePPPO.idPPPO,
        code: updatePPPO.code,
        company: updatePPPO.company,
        parent_id: updatePPPO.parent_id,
        title: title,
        description: description,
        planned_value: planned_value,
        actual_cost: actual_cost,
        start_date: start_date,
        finish_date: finish_date,
        start_real_date: start_real_date,
        finish_real_date: finish_real_date,
        risk: risk,
        priority: priority,
        strategic_goal: strategic_goal,
        earned_value: updatePPPO.earned_value,
        ROI: updatePPPO.ROI,
        cost_benefit: updatePPPO.cost_benefit,
        PPPO: updatePPPO.PPPO,
        state: state,
        internal_manager: internal_manager,
        external_manager: external_manager 
        };
        console.log("Estamo ready");
        console.log(updatedData);
        // Llamar a la funci√≥n updatePPPO con el ID del PPPO y los datos actualizados
        await lib.updatePPPO(update, updatedData);
        formSent = true;
        
        
        return Astro.redirect(`/Company/PPPO?idPPPO=${update}`);
        
      }

      }
      catch (error) {
        if (error instanceof Error) {
          console.error(error.message);
        }
      }
  } 





---

<div class="flex items-center justify-center p-12">
  
  <div class="mx-auto w-full max-w-[550px] bg-white">
    {invalid_code && update == "" && <PopUpError client:load />}
    
    <form action="" method="POST">
      {
         updatePPPO == null && (
        <div class="mb-5">
        <label class="mb-3 block text-base font-medium text-[#07074D]">
          What object would you like to create?
        </label>
        <div class="flex items-center space-x-6">
          <div class="flex items-center">
            { parent_id === "" || pppoType === 0 ? 
            <input
              type="radio"
              name="radio1"
              id="radioButtonPortfolio"
              class="h-5 w-5"
              value="0"
            /> : 
            <input
              type="radio"
              name="radio1"
              id="radioButtonPortfolio"
              class="h-5 w-5"
              value="0"
              disabled
            />
            }
            <label
              for="radioButtonPortfolio"
              class="pl-3 text-base font-medium text-[#07074D]"
            >
              Portfolio
            </label>
          </div>

          <div class="flex items-center">
            { pppoType < 2 && pppoType != -1 ? 
            <input
            type="radio"
            name="radio1"
            id="radioButtonProgram"
            value="1"
            class="h-5 w-5"
            /> : 
            <input
            type="radio"
            name="radio1"
            id="radioButtonProgram"
            value="1"
            class="h-5 w-5"
            disabled
            />
            }
            <label
              for="radioButtonProgram"
              class="pl-3 text-base font-medium text-[#07074D]"
            >
              Program
            </label>
          </div>

          <div class="flex items-center">
            { pppoType < 3 && pppoType != -1 ? 
              <input
              type="radio"
              name="radio1"
              id="radioButtonProject"
              class="h-5 w-5"
              value="2"
            /> : 
            <input
              type="radio"
              name="radio1"
              id="radioButtonProject"
              class="h-5 w-5"
              value="2"
              disabled
            />
              }
            
            <label
              for="radioButtonProject"
              class="pl-3 text-base font-medium text-[#07074D]"
            >
              Project
            </label>
          </div>

          <div class="flex items-center">
            { pppoType < 2 && pppoType != -1 ? 
              <input
              type="radio"
              name="radio1"
              id="radioButtonOperation"
              class="h-5 w-5"
              value="3"
            /> : 
            <input
              type="radio"
              name="radio1"
              id="radioButtonOperation"
              class="h-5 w-5"
              value="3"
              disabled
            />
              }
            
            <label
              for="radioButtonOperation"
              class="pl-3 text-base font-medium text-[#07074D]"
            >
              Operation
            </label>
          </div>
        </div>
      </div>
        )
      }
      
      <div class="mb-5">
        <label
          for="title"
          class="mb-3 block text-base font-medium text-[#07074D]"
          
        >
        Title
        </label>
        <input
          type="text"
          name="title"
          id="title"
          value={updatePPPO ? updatePPPO.title : ""}
          placeholder="Title"
          minlength="3"
          maxlength="50"
          required
          class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
        />
      </div>
      <div class="mb-5">
        <label
          for="description"
          class="mb-3 block text-base font-medium text-[#07074D]"
        >
        Description
        </label>
        <textarea
          name="description"
          id="description"
          placeholder="Description"
          class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
          maxlength="300">
          {updatePPPO ? updatePPPO.description : ""}
        </textarea>
          
          
      </div>
      
      <div class="mb-5">
        <label
          for="title"
          class="mb-3 block text-base font-medium text-[#07074D]"
          
        >
        Code
        </label>
        <input
          type="text"
          name="code"
          id="code"
          placeholder="Code"
          value={updatePPPO ? updatePPPO.code : ""}
          minlength="2"
          maxlength="10"
          required
          class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
        />
      </div>
      <div class="mb-5">
        <label
          for="title"
          class="mb-3 block text-base font-medium text-[#07074D]"
          
        >
        Strategic Goal
        </label>
        <input
          type="text"
          name="strategic_goal"
          id="strategic_goal"
          placeholder="Strategic Goal"
          value={updatePPPO ? updatePPPO.strategic_goal: ""}
          minlength="5"
          maxlength="50"
          required
          class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
        />
      </div>
      
      <div class="-mx-3 flex flex-wrap">
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="planned_value"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Planned Value
            </label>
            <input
              type="number"
              min="0"
              name="planned_value"
              value={updatePPPO ? updatePPPO.planned_value : ""}
              id="planned_value"
              placeholder="Enter your planned value"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="actual_cost"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Actual Cost
            </label>
            <input
              type="number"
              min="0"
              value={updatePPPO ? updatePPPO.actual_cost : ""}
              name="actual_cost"
              id="actual_cost"
              placeholder="Enter your actual cost"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
      </div>
      
      <div class="-mx-3 flex flex-wrap">
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="date"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
             Planned Start Date
            </label>
            <input
              required
              type="date"
              value={
                updatePPPO && updatePPPO.start_date && convertToISOFormat(updatePPPO.start_date) !== "2100-12-11"
                ? convertToISOFormat(updatePPPO.start_date)
                : ""
            }
              name="start_date"
              id="start_date"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="date"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Planned Finish Date
            </label>
            <input
              type="date"
              value={
                updatePPPO && convertToISOFormat(updatePPPO.finish_date) !== "2100-12-11"
                ? convertToISOFormat(updatePPPO.finish_date)
                : ""
            }
              name="finish_date"
              id="finish_date"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
      </div>
      <div class="-mx-3 flex flex-wrap">
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="date"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
             Start Real Date
            </label>
            <input
              type="date"
              value={
                updatePPPO && convertToISOFormat(updatePPPO.start_real_date) !== "2100-12-11"
                ? convertToISOFormat(updatePPPO.start_real_date)
                : ""
            }
              name="start_real_date"
              id="start_real_date"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
        <div class="w-full px-3 sm:w-1/2">
          <div class="mb-5">
            <label
              for="date"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Finish Real Date
            </label>
            <input
              type="date"
              name="finish_real_date"
              value={
                updatePPPO && convertToISOFormat(updatePPPO.finish_real_date) !== "2100-12-11"
                ? convertToISOFormat(updatePPPO.finish_real_date)
                : ""
            }
              id="finish_real_date"
              class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
            />
          </div>
        </div>
      </div>
      <div class="mb-5 pt-3">
        <div class="-mx-3 flex flex-wrap">
          <div class="w-full px-3 sm:w-1/2">
            <div class="mb-5">
              <label
              for="text"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Risk
            </label>
            <div class="flex justify-between">
              <a class="text-left">Low</a>
              <a class="text-center">Medium</a>
              <a class="text-right">High</a>
            </div>
              <input
                required
                type="range"
                name="risk"
                id="risk"
                min="0" max="2" step="1"
                class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium"
              />
            </div>
          </div>
          <div class="w-full px-3 sm:w-1/2">
            <div class="mb-5">
              <label
              for="text"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Priority
            </label>
            <div class="flex justify-between">
              <a class="text-left">Low</a>
              <a class="text-center">Medium</a>
              <a class="text-right">High</a>
            </div>
            <input
            required
            type="range"
            name="priority"
            id="priority"
            min="0" max="2" step="1"
            class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium"
          />
            </div>
          </div>
        </div> 
      <div class="mb-5 pt-3">
        <div class="-mx-3 flex flex-wrap">
          <div class="w-full px-3 sm:w-1/2">
            <div class="mb-5">
              <label
              for="text"
              class="mb-3 block text-base font-medium text-[#07074D]"
            >
              Internal Manager
            </label>
            <select required name="internal_manager" id="internal_manager" class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md">
              {
                persons && persons.map((person) => (
                  <option value={person.idPerson}>{person.name}</option>
                ))
              }
              
            </select>
              
            </div>
          </div>
          <div class="w-full px-3 sm:w-1/2">
            <div class="mb-5">
              <label
              for="text"
              class="mb-3 block text-base font-medium text-[#07074D]"
              
            >
              External Manager
            </label>
            <select name="external_manager" id="external_manager" class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md">
              <option value="">None</option>
              {
                persons && persons.map((person) => (
                  <option value={person.idPerson}>{person.name}</option>
                ))
              }
              
            </select>
              
            </div>
          </div>
          <div class="mb-5">
            <label
            for="text"
            class="mb-3 block text-base font-medium text-[#07074D]"
          >
            States
          </label>
          <select required name="state" id="state" class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md">
            {
              states && states.map((state) => (
                <option value={state.idState}>{state.state}</option>
              ))
            }
            
          </select>
            
          </div>
        </div> 
        
      

      <div>
        {
          updatePPPO == null && (

          
          <button
          class="hover:shadow-form w-full rounded-md bg-[#6A64F1] py-3 px-8 text-center text-base font-semibold text-white outline-none"
        >
          Create
        </button>
          )
        }
        {
          updatePPPO != null && (
          <button
          class="hover:shadow-form w-full rounded-md bg-[#6A64F1] py-3 px-8 text-center text-base font-semibold text-white outline-none"
        >
          Update
        </button>
          )
        }
        
      </div>
    </form>
  </div>
</div>