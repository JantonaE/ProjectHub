---
//import Layout from '../../layouts/Layout.astro';
import SideBar from '../../components/SideBar.astro';
//import FilterNavBar from '../../components/FilterNavBar.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import StateComponent from '../../components/StateComponent.astro';
import { getUser } from '../../lib/auth';
import { getFilteredButton, getFilteredURL, setFilteredButton } from '../../lib/filters';
import FilterModal from '../../components/FilterModal.astro';


const url = "http://127.0.0.1:8000";
let cid = await getUser();
let companyId: any;
if(cid == null){
  return Astro.redirect('/');
}else{
  companyId = cid.company;
}


let apiFilterURL = await getFilteredURL();
console.log("Api en Main:");
console.log(apiFilterURL);
let data;
if(apiFilterURL == null){
  async function fetchPortfolios() {
    try {
      const response = await fetch(`${url}/Companies/Portfolios/${companyId}`);
      if (response.ok) {
        data = await response.json();
        
      } else {
        throw new Error('Error al obtener portfolios');
      }
    } catch (error) {
      console.error(error);
    }
  }

  await fetchPortfolios();

}else {
  async function fetchFilteredPortfolios(api) {
    try {
      const response = await fetch(api);
      if (response.ok) {
        data = await response.json();
        
      } else {
        throw new Error('Error al obtener portfolios');
      }
    } catch (error) {
      console.error(error);
    }
  }
  await fetchFilteredPortfolios(apiFilterURL);
  console.log("Filtrado:");

}

---
<script>
  history.replaceState(null,null,location.pathname);
</script>

<div class="flex">
  <div class="w-1/5 h-full fixed inset-y-0 left-0 min-w-10">
      <SideBar />
  </div>
  
 
  <div class="w-4/5 h-full ml-64 overflow-auto">
    <nav class="w-full">
      <Breadcrumb />
      
      
    </nav>
    <br>
    <br>
    <div class="flex text-center justify-center m-5">
      
      <table class="">
        
        <thead>
          <tr>
            <th class="border p-2">
              <a href={`/Company/PPPO/Form?parent_id=${""}&update=${""}`}>
                +
              </a>
            </th>
            <th class="border p-2" colspan="2">
              <FilterModal />
              <script>
              
              document.addEventListener('DOMContentLoaded', function() {
                // Verificar si el indicador de filtro completado está presente en el localStorage
                const filtroCompletado = localStorage.getItem('filtroCompletado');
                if (filtroCompletado === 'true') {
                  // Si el filtro se ha completado, limpiar el indicador del localStorage
                  localStorage.removeItem('filtroCompletado');
                  // Recargar la página PPPOs
                  window.location.reload();
                }
              });
              </script>
            </th>
            <th class="border p-2">
              
            </th>
            
          </tr>
        </thead>
        <thead>
            <tr>
                <th class="border p-2">Type</th>
                <th class="border p-2">Title</th>
                <th class="border p-2">Code</th>
                <th class="border p-2">Start Date / <br>Real Start Date</th>
                <th class="border p-2">Finish Date / <br> Real Finish Date</th>
                <th class="border p-2">Risk</th>
                <th class="border p-2">Priority</th>
                <th class="border p-2">P.V / A.C</th>
                <th class="border p-2">Strategic Goal</th>
                <th class="border p-2">State</th>
            </tr>
        </thead>
        <tbody>
            {
            data && data.map((portfolio) => (
                <tr >
                    <td class="border p-2">
                      Portfolio
                      </td>
                    <td class="border p-2 text-blue-600 hover:underline">
                      <a href={`/Company/PPPO?idPPPO=${portfolio.idPPPO}`}>{portfolio.title}</a>
                      
                      </td>
                    <td class="border p-2 text-blue-600 hover:underline">
                      <a href={`/Company/PPPO/Sons?parentId=${portfolio.idPPPO}`}>{portfolio.code}</a>
                      
                      </td>
                    <td class="border p-2">{portfolio.start_date}
                      - <br><span class={portfolio.start_real_date === "12/12/2100" ? "text-gray-600" : 
                        "text-black"}>
                      {portfolio.start_real_date === "12/12/2100" ? "Not Defined" : 
                      portfolio.start_real_date
                      }
                      </span></td>
                    
                    <td class="border p-2">
                      <span class={portfolio.finish_date === "12/12/2100" ? "text-gray-600" : 
                        "text-black"}>
                      {portfolio.finish_date === "12/12/2100" ? "Not Defined" : 
                      portfolio.finish_date
                      } 

                      </span>
                      - <br>
                      <span class={portfolio.finish_real_date === "12/12/2100" ? "text-gray-600" : 
                        "text-black"}>
                      {portfolio.finish_real_date === "12/12/2100" ? "Not Defined" : 
                      portfolio.finish_real_date
                      }
                      </span>
                    </td>
                    
                    <td class="border p-2">
                      <span class={portfolio.risk === 0 ? "text-green-500" : 
              portfolio.risk === 1 ? "text-yellow-500" : 
              "text-red-500"}>
                      {portfolio.risk === 0 ? "Low" : 
                      portfolio.risk === 1 ? "Medium" :
                      "High"
                    }
                      </span>
                      </td>
                    <td class="border p-2">
                      <span class={portfolio.risk === 0 ? "text-green-500" : 
                      portfolio.priority === 1 ? "text-yellow-500" : 
                      "text-red-500"}>  
                      {portfolio.priority === 0 ? "Low" : 
                      portfolio.priority === 1 ? "Medium" :
                      "High"
                    }
                      </span>
                    </td>
                    <td class="border p-2">{portfolio.planned_value} - {portfolio.actual_cost == 0 ? "Not Defined" : portfolio.actual_cost}</td>
                    <td class="border p-2">{portfolio.strategic_goal}</td>
                    <td class="border p-2 w-20"><StateComponent state={portfolio.state} /></td>
                </tr>
            ))
          }
        </tbody>
    </table>
    </div>
      
  </div>
</div>


