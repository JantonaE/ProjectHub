{
  "openapi": "3.0.0",
  "info": {
    "title": "ProjectHub",
    "description": "Jesus Antona Espejo",
    "version": "0.1.0"
  },
  "paths": {
    "/Persons/": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Find All Persons",
        "description": "Devuelve una lista de persons",
        "operationId": "find_all_persons_Persons__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person-Output"
                  },
                  "type": "array",
                  "title": "Response Find All Persons Persons  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Create Person",
        "description": "Crea un person y lo devuelve",
        "operationId": "create_person_Persons__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Persons/{id}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Find One Person",
        "description": "Devuelve el person con id pasado por par\u00e1metro",
        "operationId": "find_one_person_Persons__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del person a buscar",
              "title": "Id"
            },
            "description": "Id del person a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Persons"
        ],
        "summary": "Delete Person",
        "description": "Elimina el person con id pasado por par\u00e1metro",
        "operationId": "delete_person_Persons__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del person a eliminar",
              "title": "Id"
            },
            "description": "Id del person a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Persons"
        ],
        "summary": "Update Person",
        "description": "Actualiza el person con id pasado por par\u00e1metro y lo devuelve",
        "operationId": "update_person_Persons__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del person a actualizar",
              "title": "Id"
            },
            "description": "Id del person a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Person-Input"
                  }
                ],
                "description": "Datos del person a actualizar",
                "title": "Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Person/Login/": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Find Logged Person1",
        "description": "Devuelve la persona con los parametros pasados",
        "operationId": "find_logged_person1_Person_Login__post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-Output"
                }
              }
            }
          }
        }
      }
    },
    "/Persons/by_company/{company}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Find Persons By Company",
        "description": "Devuelve una lista de persons filtrados por la compa\u00f1\u00eda",
        "operationId": "find_persons_by_company_Persons_by_company__company__get",
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Nombre de la compa\u00f1\u00eda para filtrar las personas",
              "title": "Company"
            },
            "description": "Nombre de la compa\u00f1\u00eda para filtrar las personas"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person-Output"
                  },
                  "title": "Response Find Persons By Company Persons By Company  Company  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Persons/by_dni/{dni}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Find Person By Dni",
        "description": "Devuelve el person con el DNI pasado por par\u00e1metro",
        "operationId": "find_person_by_dni_Persons_by_dni__dni__get",
        "parameters": [
          {
            "name": "dni",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DNI del person a buscar",
              "title": "Dni"
            },
            "description": "DNI del person a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Companies/": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Find All Companies",
        "description": "Devuelve una lista de companies",
        "operationId": "find_all_companies_Companies__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  },
                  "type": "array",
                  "title": "Response Find All Companies Companies  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company",
        "description": "Crea un company y lo devuelve",
        "operationId": "create_company_Companies__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Find One Company",
        "description": "Devuelve el company con id pasado por par\u00e1metro",
        "operationId": "find_one_company_Companies__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del company a buscar",
              "title": "Id"
            },
            "description": "Id del company a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company",
        "description": "Elimina el company con id pasado por par\u00e1metro",
        "operationId": "delete_company_Companies__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del company a eliminar",
              "title": "Id"
            },
            "description": "Id del company a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company",
        "description": "Actualiza el company con id pasado por par\u00e1metro y lo devuelve",
        "operationId": "update_company_Companies__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del company a actualizar",
              "title": "Id"
            },
            "description": "Id del company a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ],
                "description": "Datos del company a actualizar",
                "title": "Company"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/Companies/Portfolios/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Find High Portfolios",
        "description": "Devuelve los portfolios sin parent_id de company con id pasado por par\u00e1metro",
        "operationId": "find_high_portfolios_Companies_Portfolios__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del company a buscar",
              "title": "Id"
            },
            "description": "Id del company a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PPPO-Output"
                  },
                  "title": "Response Find High Portfolios Companies Portfolios  Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/{id}": {
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find One Pppo",
        "description": "Devuelve el pppo con id pasado por par\u00e1metro",
        "operationId": "find_one_pppo_PPPOs__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del pppo a buscar",
              "title": "Id"
            },
            "description": "Id del pppo a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PPPO-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Delete Pppo",
        "description": "Elimina el pppo con id pasado por par\u00e1metro",
        "operationId": "delete_pppo_PPPOs__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del pppo a eliminar",
              "title": "Id"
            },
            "description": "Id del pppo a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Update Pppo",
        "description": "Actualiza el pppo con id pasado por par\u00e1metro y lo devuelve",
        "operationId": "update_pppo_PPPOs__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del pppo a actualizar",
              "title": "Id"
            },
            "description": "Id del pppo a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PPPO-Input"
                  }
                ],
                "description": "Datos del pppo a actualizar",
                "title": "Pppo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PPPO-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/Sons/{id}": {
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find Pppo Sons",
        "description": "Devuelve los pppos con parent_id con id pasado por par\u00e1metro",
        "operationId": "find_pppo_sons_PPPOs_Sons__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del pppo a buscar sus hijos",
              "title": "Id"
            },
            "description": "Id del pppo a buscar sus hijos"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PPPO-Output"
                  },
                  "title": "Response Find Pppo Sons Pppos Sons  Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/Ancestors/{id}": {
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find Pppo Ancestors",
        "description": "Devuelve los ancestros del id pasado por par\u00e1metro",
        "operationId": "find_pppo_ancestors_PPPOs_Ancestors__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del pppo a buscar sus padres",
              "title": "Id"
            },
            "description": "Id del pppo a buscar sus padres"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PPPO-Output"
                  },
                  "title": "Response Find Pppo Ancestors Pppos Ancestors  Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/Brother/": {
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find Pppo Brothers With Code",
        "description": "Verifica si hay alg\u00fan hermano con el mismo c\u00f3digo del padre",
        "operationId": "find_pppo_brothers_with_code_PPPOs_Brother__get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Id del PPPO padre",
              "title": "Id"
            },
            "description": "Id del PPPO padre"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "C\u00f3digo del PPPO",
              "title": "Code"
            },
            "description": "C\u00f3digo del PPPO"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Find Pppo Brothers With Code Pppos Brother  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/BrotherAncestor/": {
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find Pppo Ancestor With Code",
        "description": "Verifica si hay alg\u00fan hermano con el mismo c\u00f3digo del padre",
        "operationId": "find_pppo_ancestor_with_code_PPPOs_BrotherAncestor__get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Id de la compa\u00f1ia",
              "title": "Id"
            },
            "description": "Id de la compa\u00f1ia"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "C\u00f3digo del PPPO",
              "title": "Code"
            },
            "description": "C\u00f3digo del PPPO"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Find Pppo Ancestor With Code Pppos Brotherancestor  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/PPPOs/": {
      "post": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Create Pppo",
        "description": "Crea un pppo y lo devuelve",
        "operationId": "create_pppo_PPPOs__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PPPO-Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PPPO-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PPPOs"
        ],
        "summary": "Find All Pppos Filter",
        "description": "Devuelve una lista de PPPO filtrados",
        "operationId": "find_all_pppos_filter_PPPOs__get",
        "parameters": [
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Id del padre",
              "title": "Parent Id"
            },
            "description": "Id del padre"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Compa\u00f1ia",
              "title": "Company"
            },
            "description": "Compa\u00f1ia"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "B\u00fasqueda en T\u00edtulo o C\u00f3digo",
              "title": "Search"
            },
            "description": "B\u00fasqueda en T\u00edtulo o C\u00f3digo"
          },
          {
            "name": "planned_valueMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "P.V (m\u00ednimo)",
              "title": "Planned Valuemin"
            },
            "description": "P.V (m\u00ednimo)"
          },
          {
            "name": "planned_valueMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "P.V (m\u00e1ximo)",
              "title": "Planned Valuemax"
            },
            "description": "P.V (m\u00e1ximo)"
          },
          {
            "name": "actual_costMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "A.C (m\u00ednimo)",
              "title": "Actual Costmin"
            },
            "description": "A.C (m\u00ednimo)"
          },
          {
            "name": "actual_costMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "A.C (m\u00e1ximo)",
              "title": "Actual Costmax"
            },
            "description": "A.C (m\u00e1ximo)"
          },
          {
            "name": "earned_valueMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Earned Value (m\u00ednimo)",
              "title": "Earned Valuemin"
            },
            "description": "Earned Value (m\u00ednimo)"
          },
          {
            "name": "earned_valueMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Earned Value (m\u00e1ximo)",
              "title": "Earned Valuemax"
            },
            "description": "Earned Value (m\u00e1ximo)"
          },
          {
            "name": "risk",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Riesgo del PPPO",
              "title": "Risk"
            },
            "description": "Riesgo del PPPO"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Prioridad del PPPO",
              "title": "Priority"
            },
            "description": "Prioridad del PPPO"
          },
          {
            "name": "start_dateMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de inicio planeada (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Start Datemin"
            },
            "description": "Fecha de inicio planeada (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "start_dateMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de inicio planeada (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Start Datemax"
            },
            "description": "Fecha de inicio planeada (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "start_real_dateMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de inicio real (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Start Real Datemin"
            },
            "description": "Fecha de inicio real (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "start_real_dateMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de inicio real (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Start Real Datemax"
            },
            "description": "Fecha de inicio real (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "finish_dateMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de fin planeada (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Finish Datemin"
            },
            "description": "Fecha de fin planeada (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "finish_dateMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de fin planeada (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Finish Datemax"
            },
            "description": "Fecha de fin planeada (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "finish_real_dateMin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de fin real (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Finish Real Datemin"
            },
            "description": "Fecha de fin real (m\u00ednima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "finish_real_dateMax",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Fecha de fin real (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'",
              "title": "Finish Real Datemax"
            },
            "description": "Fecha de fin real (m\u00e1xima) - El formato debe ser 'dd/mm/yyyy'"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Estado del PPPO",
              "title": "State"
            },
            "description": "Estado del PPPO"
          },
          {
            "name": "sortedBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Campo por el que se ordena la lista",
              "title": "Sortedby"
            },
            "description": "Campo por el que se ordena la lista"
          },
          {
            "name": "desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Ordenar por orden descendente",
              "default": false,
              "title": "Desc"
            },
            "description": "Ordenar por orden descendente"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PPPO-Output"
                  },
                  "title": "Response Find All Pppos Filter Pppos  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/States/": {
      "get": {
        "tags": [
          "States"
        ],
        "summary": "Find All States",
        "description": "Devuelve una lista de states",
        "operationId": "find_all_states_States__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/State"
                  },
                  "type": "array",
                  "title": "Response Find All States States  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "States"
        ],
        "summary": "Create State",
        "description": "Crea un state y lo devuelve",
        "operationId": "create_state_States__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/State"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/States/{id}": {
      "get": {
        "tags": [
          "States"
        ],
        "summary": "Find One State",
        "description": "Devuelve el state con id pasado por par\u00e1metro",
        "operationId": "find_one_state_States__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del state a buscar",
              "title": "Id"
            },
            "description": "Id del state a buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "States"
        ],
        "summary": "Delete State",
        "description": "Elimina el state con id pasado por par\u00e1metro",
        "operationId": "delete_state_States__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del state a eliminar",
              "title": "Id"
            },
            "description": "Id del state a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "States"
        ],
        "summary": "Update State",
        "description": "Actualiza el state con id pasado por par\u00e1metro y lo devuelve",
        "operationId": "update_state_States__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del state a actualizar",
              "title": "Id"
            },
            "description": "Id del state a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/State"
                  }
                ],
                "description": "Datos del state a actualizar",
                "title": "State"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/StatesType/{state_type}": {
      "get": {
        "tags": [
          "States"
        ],
        "summary": "Find All States Of Type",
        "description": "Devuelve una lista de states filtrados",
        "operationId": "find_all_states_of_type_StatesType__state_type__get",
        "parameters": [
          {
            "name": "state_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id del state a actualizar",
              "title": "State Type"
            },
            "description": "Id del state a actualizar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  },
                  "title": "Response Find All States Of Type Statestype  State Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/States/DeletedByType/{state_type}": {
      "get": {
        "tags": [
          "States"
        ],
        "summary": "Find Deleted State By Type",
        "description": "Devuelve el estado con el type pasado por par\u00e1metro y estado 'Deleted'",
        "operationId": "find_deleted_state_by_type_States_DeletedByType__state_type__get",
        "parameters": [
          {
            "name": "state_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Id del state a actualizar",
              "title": "State Type"
            },
            "description": "Id del state a actualizar"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "properties": {
          "idCompany": {
            "type": "string",
            "title": "Idcompany"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "NIF": {
            "type": "string",
            "title": "Nif"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "admin": {
            "type": "string",
            "title": "Admin"
          }
        },
        "type": "object",
        "required": [
          "idCompany",
          "code",
          "NIF",
          "name",
          "admin"
        ],
        "title": "Company"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PPPO-Input": {
        "properties": {
          "idPPPO": {
            "type": "string",
            "title": "Idpppo"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "planned_value": {
            "type": "number",
            "title": "Planned Value"
          },
          "actual_cost": {
            "type": "number",
            "title": "Actual Cost"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "finish_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Date"
          },
          "start_real_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Real Date"
          },
          "finish_real_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Real Date"
          },
          "risk": {
            "type": "number",
            "title": "Risk"
          },
          "priority": {
            "type": "number",
            "title": "Priority"
          },
          "strategic_goal": {
            "type": "string",
            "title": "Strategic Goal"
          },
          "earned_value": {
            "type": "number",
            "title": "Earned Value"
          },
          "ROI": {
            "type": "number",
            "title": "Roi"
          },
          "cost_benefit": {
            "type": "number",
            "title": "Cost Benefit"
          },
          "PPPO": {
            "type": "number",
            "title": "Pppo"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "internal_manager": {
            "type": "string",
            "title": "Internal Manager"
          },
          "external_manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Manager"
          }
        },
        "type": "object",
        "required": [
          "idPPPO",
          "code",
          "company",
          "title",
          "description",
          "planned_value",
          "actual_cost",
          "start_date",
          "risk",
          "priority",
          "strategic_goal",
          "earned_value",
          "ROI",
          "cost_benefit",
          "PPPO",
          "state",
          "internal_manager",
          "external_manager"
        ],
        "title": "PPPO"
      },
      "PPPO-Output": {
        "properties": {
          "idPPPO": {
            "type": "string",
            "title": "Idpppo"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "planned_value": {
            "type": "number",
            "title": "Planned Value"
          },
          "actual_cost": {
            "type": "number",
            "title": "Actual Cost"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "finish_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Date"
          },
          "start_real_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Real Date"
          },
          "finish_real_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Real Date"
          },
          "risk": {
            "type": "number",
            "title": "Risk"
          },
          "priority": {
            "type": "number",
            "title": "Priority"
          },
          "strategic_goal": {
            "type": "string",
            "title": "Strategic Goal"
          },
          "earned_value": {
            "type": "number",
            "title": "Earned Value"
          },
          "ROI": {
            "type": "number",
            "title": "Roi"
          },
          "cost_benefit": {
            "type": "number",
            "title": "Cost Benefit"
          },
          "PPPO": {
            "type": "number",
            "title": "Pppo"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "internal_manager": {
            "type": "string",
            "title": "Internal Manager"
          },
          "external_manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Manager"
          }
        },
        "type": "object",
        "required": [
          "idPPPO",
          "code",
          "company",
          "parent_id",
          "title",
          "description",
          "planned_value",
          "actual_cost",
          "start_date",
          "finish_date",
          "start_real_date",
          "finish_real_date",
          "risk",
          "priority",
          "strategic_goal",
          "earned_value",
          "ROI",
          "cost_benefit",
          "PPPO",
          "state",
          "internal_manager",
          "external_manager"
        ],
        "title": "PPPO"
      },
      "Person-Input": {
        "properties": {
          "idPerson": {
            "type": "string",
            "title": "Idperson"
          },
          "DNI": {
            "type": "string",
            "title": "Dni"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "pppo_internal": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pppo Internal"
          },
          "pppo_external": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pppo External"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "admin": {
            "type": "number",
            "title": "Admin"
          }
        },
        "type": "object",
        "required": [
          "idPerson",
          "DNI",
          "name",
          "email",
          "password",
          "company",
          "admin"
        ],
        "title": "Person"
      },
      "Person-Output": {
        "properties": {
          "idPerson": {
            "type": "string",
            "title": "Idperson"
          },
          "DNI": {
            "type": "string",
            "title": "Dni"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "pppo_internal": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pppo Internal"
          },
          "pppo_external": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pppo External"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "admin": {
            "type": "number",
            "title": "Admin"
          }
        },
        "type": "object",
        "required": [
          "idPerson",
          "DNI",
          "name",
          "email",
          "pppo_internal",
          "pppo_external",
          "password",
          "company",
          "admin"
        ],
        "title": "Person"
      },
      "State": {
        "properties": {
          "idState": {
            "type": "string",
            "title": "Idstate"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "type": {
            "type": "number",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "idState",
          "state",
          "type"
        ],
        "title": "State"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "Default"
    },
    {
      "url": "http://localhost:8000",
      "description": "Local dev"
    }
  ]
}